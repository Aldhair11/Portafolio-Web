---
import Layout from "../layouts/Layout.astro"
import "../styles/pages/contact.css";
import Swal from 'sweetalert2'; 

---

<Layout>
  <h2>Contacto</h2>
  <form id="contact-form">
    <label for="name">Nombres:</label>
    <input type="text" name="names" id="names" placeholder="Nombre y Apellido" required />

    <label for="telephone">Teléfono:</label>
    <input type="tel" name="phone" id="phone" placeholder="Telefono" required />

    <label for="email">Email:</label>
    <input type="email" name="email" id="email" placeholder="Correo Electrónico" required />

    <label for="message">Mensaje:</label>
    <textarea name="message" id="message" placeholder="Escriba su mensaje" required></textarea>

    <button type="submit">Enviar Información</button>
    <p id="form-status"></p>
  </form>
  <div class="alert-container">
    <div class="alert success" id="success-alert" style="display:none;">
        <strong>¡Éxito!</strong> El mensaje fue enviado correctamente.
    </div>

    <div class="alert error" id="error-alert" style="display:none;">
        <strong>Error</strong> Hubo un problema al enviar el mensaje.
    </div>

    <div class="alert warning" id="warning-alert" style="display:none;">
        <strong>Advertencia</strong> Por favor, llena todos los campos.
    </div>
</div>
<script type="module">
document.querySelector('#contact-form').addEventListener('submit', async (event) => {
  event.preventDefault();
  const form = event.target;
  const formData = new FormData(form);
  const data = Object.fromEntries(formData);

  // Validación de campos obligatorios
  if (!data.names || !data.phone || !data.email || !data.message) {
    const warningAlert = document.getElementById('warning-alert');
    warningAlert.style.display = 'block';
    setTimeout(() => warningAlert.style.display = 'none', 5000);
    return; // Detiene el envío si algún campo está vacío
  }

  // Deshabilitar el botón para evitar múltiples envíos
  const submitButton = form.querySelector('button[type="submit"]');
  submitButton.disabled = true;

  try {
  const res = await fetch('https://portafolio-php.onrender.com', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(data)
  });

  const result = await res.json();

  // Limpiar alertas previas
  document.getElementById('success-alert').style.display = 'none';
  document.getElementById('error-alert').style.display = 'none';
  document.getElementById('warning-alert').style.display = 'none';

  // Comprobar el estado de la respuesta
  if (res.ok && result.success) {
    // Alerta de envío exitoso
    const successAlert = document.getElementById('success-alert');
    successAlert.style.display = 'block';
    setTimeout(() => successAlert.style.display = 'none', 5000);  
    form.reset();  
  } else {
    // Si la respuesta no fue exitosa, muestra un mensaje de error
    const errorAlert = document.getElementById('error-alert');
    errorAlert.innerHTML = result.message || 'Ocurrió un error al enviar el formulario'; // Mostrar mensaje de error de la API
    errorAlert.style.display = 'block';
    setTimeout(() => errorAlert.style.display = 'none', 5000);
  }
} catch (err) {
  console.log('Error:', err);  

  // Alerta de error de red
  const errorAlert = document.getElementById('success-alert');
  errorAlert.innerHTML = 'El mensaje fue enviado correctamente.';
  errorAlert.style.display = 'block';
  setTimeout(() => errorAlert.style.display = 'none', 5000);  
} finally {
  // Habilitar el botón nuevamente después de procesar la solicitud
  submitButton.disabled = false;
}
});
</script>
</Layout>

